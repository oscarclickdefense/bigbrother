---
- name: Setup Rsyslog Docker Container on Debian
  hosts: all
  become: true

  vars:
    container_user: container_user
    rsyslog_dir: /home/container_user/services/rsyslog
    docker_compose_file: "{{ rsyslog_dir }}/docker-compose.yml"
    rsyslog_conf_file: "{{ rsyslog_dir }}/rsyslog.conf"

  tasks:
    - name: Install required APT packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        update_cache: yes
        state: present

    - name: Add Docker GPG key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker APT repository (bookworm)
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable"
        state: present
        filename: docker

    - name: Install Docker and Compose plugin
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Create service user '{{ container_user }}'
      user:
        name: "{{ container_user }}"
        shell: /bin/bash
        create_home: yes
        groups: docker
        append: yes

    - name: Create rsyslog service directory
      file:
        path: "{{ rsyslog_dir }}"
        state: directory
        owner: "{{ container_user }}"
        group: "{{ container_user }}"
        mode: '0755'
        recurse: yes

    - name: Template docker-compose.yml
      template:
        src: docker-compose.yml.j2
        dest: "{{ docker_compose_file }}"
        owner: "{{ container_user }}"
        group: "{{ container_user }}"
        mode: '0644'

    - name: Template rsyslog.conf (listener for TCP/UDP)
      template:
        src: rsyslog.conf.j2
        dest: "{{ rsyslog_conf_file }}"
        owner: "{{ container_user }}"
        group: "{{ container_user }}"
        mode: '0644'

    - name: Ensure rsyslog.d directory exists
      file:
        path: "{{ rsyslog_dir }}/rsyslog.d"
        state: directory
        owner: "{{ container_user }}"
        group: "{{ container_user }}"
        mode: '0755'

    - name: Start rsyslog container as container_user
      shell: "sudo -u {{ container_user }} docker compose -f {{ docker_compose_file }} up -d"
      args:
        chdir: "{{ rsyslog_dir }}"

